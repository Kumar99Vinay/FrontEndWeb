-- switching selecting to database
use mydb;

-- All columns
SELECT * FROM EMP;

-- Q23
-- DECREMENT SAL BY 5% WHO IS CLERK?
SELECT ((SAL/0.15)) as newsal FROM EMP WHERE JOB IN ('CLERK');


-- DISPLAY EMPNO AND ENAME WHO HAVE SALARY BETWEEN 2000 AND 3000
SELECT EMPNO, ENAME FROM EMP
WHERE SAL BETWEEN 2000 AND 3000;

SELECT * FROM EMP;

-- DISPLAY EMPNO AND JOB WHO ARE FROM DEPT 10 OR 20?
SELECT EMPNO,JOB FROM EMP 
WHERE DEPTNO BETWEEN 10 AND 20;


-- DISPLAY EMPNO,MGR WHO HAVE SALARY > 2000 OR DEPTNO > 10 OR JOB IS CLERK?
SELECT EMPNO,MGR FROM EMP
WHERE SAL>2000 OR DEPTNO>10 OR JOB IN ('CLERK');

SELECT * FROM EMP;

-- INCREMENT SAL BY 15% WHO IS NOT REPORTING TO ANY ONE?
SELECT SAL*0.15+sal AS NEWSAL FROM EMP 
   WHERE MGR IS NULL;

-- Q24
-- INCREMENT SAL BY 7% WHO IS A MANAGER AND DISPLAY RECORDS IN DESCENDING OF SAL?
SELECT *,(SAL*0.07)+sal AS NEWSAL FROM EMP 
    WHERE JOB IN ('MANAGER') ORDER BY SAL DESC;
    

-- DISPLAY EMPNO AND ENAME WHO HAVE SAL BETWEEN 2000 AND 3000.DISPLAY THE RECORDS ORDER BY EMPNO IN ASCENDING?
SELECT EMPNO,ENAME FROM EMP 
WHERE SAL BETWEEN 2000 AND 3000 ORDER BY EMPNO ASC;

-- DISPLAY UNIQUE RECORDS OF EMPNO AND JOB WHO ARE FROM DEPT 10 OR 20?
SELECT DISTINCT EMPNO,JOB FROM EMP
   WHERE DEPTNO BETWEEN 10 AND 20;
   
-- DISPLAY UNIQUE JOBS FROM EMP EXCEPT MANAGER?
SELECT DISTINCT JOB FROM EMP
   WHERE JOB IN ('MANAGER');
   

-- Q25
-- COUNT TOTAL NO OF EMPS?
SELECT COUNT(*) FROM EMP;

SELECT EMPNO,COUNT(*) AS COUNTER FROM EMP GROUP BY EMPNO;

-- COUNT DEPT WISE TOTAL EMPS?
SELECT COUNT(*) FROM EMP GROUP BY DEPTNO;


-- DISPLAY MIN SALARY OF EMPS?
SELECT MIN(SAL) AS MINSAL FROM EMP;

-- DISPLAY THE MAX SALARY OF EACH DEPT?  
  SELECT MAX(SAL) AS MAXSAL ,DEPTNO FROM EMP GROUP BY DEPTNO;
  
-- COUNT PEOPLE HAVE SALARY >2000?
SELECT COUNT(*) FROM EMP WHERE SAL>2000;

-- COUNT PEOPLE FROM EACH DEPT HAVE SALARY < 3000;
SELECT COUNT(*) AS COUNT ,DEPTNO FROM EMP 
  WHERE SAL< 3000 GROUP BY DEPTNO;

-- DISPLAY DEPT HAS < 3 PEOPLE?
SELECT COUNT(*) FROM EMP 
   WHERE DEPTNO < (SELECT COUNT(*) AS COUNT FROM EMP
                  WHERE DEPTNO HAVING DEPTNO < 3);

-- DISPLAY DEPTNO WHERE DEPT'S MAX(SAL) > 3000?
SELECT DEPTNO FROM EMP WHERE SAL > 3000 GROUP BY DEPTNO;


-- Q26
-- JOINS(EMP+DEPT)
-- DISPLAY EMP DETAILS WITH 7% INCREMENT WHO BELONGS TO BOSTON LOCATION
SELECT E.*,E.SAL*0.07 AS NEWSAL ,
      D.LOC FROM EMP 
      RIGHT JOIN DEPT D USING (DEPTNO) 
           WHERE LOC="BOSTON" ;
           
select * from emp;
select * from dept;

SELECT E.*,D.LOC,(SAL+(SAL*7)/100) AS INCREMENT_SALARY
FROM EMP E
INNER JOIN DEPT D ON E.DEPTNO=D.DEPTNO
WHERE D.LOC='BOSTON';
           
-- COUNT THE NO OF EMPLOYEES WORKS FOR RESEARCH DEPT?
SELECT COUNT(*) FROM EMP
    RIGHT JOIN DEPT USING (DEPTNO)
    WHERE DNAME IN ('RESEARCH');

-- FIND OUT THE MAX SALARY RECEIVED IN SALES DEPT?
SELECT MAX(SAL) AS MAXSAL FROM EMP
       LEFT JOIN DEPT USING (DEPTNO)
       WHERE JOB IN ('SALESMAN');
       
-- DISPLAY DATE OF JOINING OF EMP WHOSE DEPT LOCATION IS NOT AVAILABLE
SELECT HIREDATE FROM EMP
      INNER JOIN DEPT USING (DEPTNO)
      WHERE LOC IS NOT NULL;
      
-- Q27
-- DDL+DML 
CREATE TABLE IF NOT EXISTS STUDENT_INFO (
           RNO INT AUTO_INCREMENT PRIMARY KEY,
           NAME VARCHAR(50) NOT NULL,
           CITY VARCHAR(30) NOT NULL
);

DESCRIBE STUDENT_INFO;

INSERT INTO STUDENT_INFO (RNO,NAME,CITY)
                       VALUES(1,'GAUTAM','JALGOAN');

INSERT INTO STUDENT_INFO (RNO,NAME,CITY)
                       VALUES(2,'BALAJI','PARBHANI');
                       
INSERT INTO STUDENT_INFO (RNO,NAME,CITY)
                       VALUES(3,'RUSHIN','JALGOAN');
                       
SELECT * FROM STUDENT_INFO;

CREATE TABLE MARKS1 (
	RNO INT ,
    SUB_CODENO INT,
    MARKS INT 
    );
    
DESCRIBE MARKS1;

INSERT INTO MARKS1 (RNO,SUB_CODENO,MARKS)
                       VALUES(1,100,80);
INSERT INTO MARKS1 (RNO,SUB_CODENO,MARKS)
                       VALUES(2,100,NULL);
INSERT INTO MARKS1 (RNO,SUB_CODENO,MARKS)
                       VALUES(1,101,90);
INSERT INTO MARKS1 (RNO,SUB_CODENO,MARKS)
                       VALUES(2,101,78);
INSERT INTO MARKS1 (RNO,SUB_CODENO,MARKS)
                       VALUES(3,100,30);
INSERT INTO MARKS1 (RNO,SUB_CODENO,MARKS)
                       VALUES(3,101,NULL);
                       
SELECT * FROM MARKS1;

CREATE TABLE IF NOT EXISTS SUBJECT (
           SUB_CODENO INT,
           SUB_NAME VARCHAR(50) 
);

DESCRIBE SUBJECT;

INSERT INTO SUBJECT (SUB_CODENO, SUB_NAME)
                       VALUES(100,'DBMS');
INSERT INTO SUBJECT (SUB_CODENO, SUB_NAME)
                       VALUES(101,'SE');
                       
SELECT * FROM SUBJECT;

-- FIND OUT AVERAGE MARKS OF EACH STUDENT ALONG WITH ROLL NUMBER OF STUDENT?
SELECT AVG(MARKS) AS AVERAGEM , RNO FROM MARKS1 M
               RIGHT JOIN STUDENT_INFO USING (RNO)
               GROUP BY M.RNO;

-- FIND OUT HOW MANY STUDENTS HAVE FAILED I.E. OBTAINED LESS THAN 40 MARKS IN DBMS
SELECT COUNT(RNO) FROM MARKS1 
       WHERE MARKS < 40 AND SUB_CODE = (SELECT SUB_CODENO FROM SUBJECT
                                      WHERE SUB_NAME = 'DBMS');
                                      
select count(rno) from marks where marks< 40 and sub_code=(select sub_code from subject
where sub_name='dbms');
                                     


--  FIND NAMES OF STUDENTS WHO ARE ABSENT IN EXAM I.E STUDENTS HAVING NULL MARKS?
SELECT S.NAME FROM STUDENT_INFO S 
      INNER JOIN MARKS1 M USING (RNO)
      WHERE M.MARKS IS NULL;
      

-- FIND THE NAME OF STUDENTS WHO LIVE IN EITHER PUNE OR JALGAON?
SELECT NAME FROM STUDENT_INFO WHERE CITY IN ('JALGAON','PUNE');


-- FIND OUT ROLL NO AND TOTAL MARKS OF EACH STUDENT?
SELECT SUM(MARKS) ,RNO  FROM MARKS1 GROUP BY RNO;


-- FIND THOSE STUDENTS NAMES WHICH START WITH 'BA'?
SELECT NAME FROM STUDENT_INFO WHERE NAME LIKE 'BA%';


-- DISPLAY TOTAL NO OF STUDENTS HAVING GREATER THAN 75 MARKS IN ANY ONE SUBJECT?
SELECT COUNT(*) FROM MARKS
       WHERE MARKS > 75;
       

-- DISPLAY MARKS OF ALL STUDENTS FOR DBMS SUBJECT?
SELECT RNO,MARKS FROM MARKS1 WHERE SUB_CODE = (SELECT SUB_CODE FROM 
                                              SUBJECT WHERE SUB_NAME = 'DBMS');
                                              
                                              
-- DISPLAY NO OF STUDENTS APPEARED FOR THE EXAM?
SELECT COUNT(*) AS COUNT FROM MARKS1 WHERE MARKS > 40 AND MARKS IS NOT NULL;

-- DISPLAY ALL SUBJECTS MARKS OF STUDENTS WHOSE NAME IS GAUTAM
SELECT MARKS FROM MARKS1 WHERE RNO =(SELECT RNO FROM STUDENT_INFO 
                                    WHERE NAME = 'GAUTAM');
                                    
                                    
                                    
-- Q28
-- DATE FUNCTIONS
-- DISPLAY THE MOST SENIOUR EMPLOYEE?
select sal from emp;

select * from emp where period_diff(date_format(now(),'%d%Y%m'),date_format(hiredate,'%d%Y%m'))=
(select max(period_diff(date_format(now(),'%d%Y%m'),date_format(hiredate,'%d%Y%m'))) from emp);

SELECT * FROM EMP WHERE HIREDATE > (SELECT MIN(datediff(CURDATE(),HIREDATE)) FROM EMP);
-- GIVE 5% INCREMENT TO EMPLOYEES WHO ARE HERE SINCE LAST 3 YEARS?
SELECT SAL*0.05 AS NEWSAL FROM EMP WHERE DATEDIFF(CURDATE(),HIREDATE)> 3;

SELECT HIREDATE, (0.05*SAL) AS INCREMENTAL , YEAR(CURdATE())-YEAR(HIREDATE) AS EXP
                      FROM EMP  
                      WHERE YEAR(CURDATE())-YEAR(HIREDATE)>= 3;
                      

-- GIVE 7% INCREMENT TO EMPLOYEES WHO ARE HERE SINCE LAST 5 YEARS AND SALARY < 2000?
SELECT SAL*0.07 AS NEWSAL FROM EMP
      WHERE DATEDIFF(CURDATE(),HIREDATE)> 5 AND SAL < 2000;
      
SELECT HIREDATE, (0.07*SAL) AS INCREMENTAL , YEAR(CURdATE())-YEAR(HIREDATE) AS EXP
                      FROM EMP  
                      WHERE YEAR(CURDATE())-YEAR(HIREDATE)>= 5 AND SAL<2000;

-- DISPLAY YEARLY REPORT WHICH SHOWS YEAR WISE NO OF JOININGS?
SELECT COUNT(*) AS JOINING, date_format(HIREDATE , "%Y") AS YEAR FROM EMP
                                         GROUP BY YEAR;
                                         
-- DISPLAY MONTHLY REPORT WHICH SHOWS MONTH WISE NO.OF JOININGS?
SELECT COUNT(*) AS JOINING, date_format(HIREDATE , "%M") AS MONTH FROM EMP
                                         GROUP BY MONTH;							